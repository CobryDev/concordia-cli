name: Test Suite

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]
  workflow_dispatch: # Allow manual trigger

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ["3.11", "3.12", "3.13"]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install uv
        run: curl -LsSf https://astral.sh/uv/install.sh | sh

      - name: Cache uv dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/uv
          key: ${{ runner.os }}-uv-${{ hashFiles('**/*.lock') }}
          restore-keys: |
            ${{ runner.os }}-uv-

      - name: Install dependencies with uv
        run: |
          # Add uv to the PATH
          export PATH="$HOME/.cargo/bin:$PATH"
          uv pip sync --system requirements-combined.lock

      - name: Check dependencies
        run: |
          export PATH="$HOME/.cargo/bin:$PATH"
          python -c "import pytest, pytest_cov, pytest_mock, ruff, nox; print('[PASS] All test dependencies installed')"

      - name: Run checks and tests with coverage
        run: |
          export PATH="$HOME/.cargo/bin:$PATH"
          nox -s ci

      - name: Check for security vulnerabilities
        run: |
          export PATH="$HOME/.cargo/bin:$PATH"
          nox -s security

      - name: Upload safety report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: safety-vulnerability-report-${{ matrix.os }}-py${{ matrix.python-version }}
          path: safety-report.json

      - name: Upload coverage reports to Codecov
        if: matrix.os == 'ubuntu-latest' && matrix.python-version == '3.11'
        uses: codecov/codecov-action@v4
        with:
          file: ./coverage.xml
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false
          token: ${{ secrets.CODECOV_TOKEN }}

      - name: Upload coverage to GitHub
        if: matrix.os == 'ubuntu-latest' && matrix.python-version == '3.11'
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: htmlcov/

  test-summary:
    needs: test
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Test Summary
        run: |
          echo "## Test Results Summary 🧪" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          if [ "${{ needs.test.result }}" == "success" ]; then
            echo "✅ **All tests passed successfully!**" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "The testing framework validated:" >> $GITHUB_STEP_SUMMARY
            echo "- Unit tests for core business logic" >> $GITHUB_STEP_SUMMARY
            echo "- Integration tests for CLI commands" >> $GITHUB_STEP_SUMMARY
            echo "- Code coverage requirements (≥80%)" >> $GITHUB_STEP_SUMMARY
            echo "- Cross-platform compatibility" >> $GITHUB_STEP_SUMMARY
          else
            echo "❌ **Tests failed!**" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "Please check the test results above and fix any issues." >> $GITHUB_STEP_SUMMARY
          fi
